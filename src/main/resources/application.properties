gg.jte.development-mode=true
spring.application.name=hmp-authserver

server.port=8090

## DB Configurations
spring.datasource.url=jdbc:postgresql://localhost:5432/hmp_db
spring.datasource.username=hmp_app
spring.datasource.password=secret

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.default_schema=hmp

# Database Connection Pool Configuration
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.leak-detection-threshold=60000

# Keep connections alive
spring.datasource.hikari.keepalive-time=60000
spring.datasource.hikari.validation-timeout=3000
spring.datasource.hikari.connection-test-query=SELECT 1

# Enable query statistics
spring.jpa.properties.hibernate.generate_statistics=false
spring.jpa.properties.hibernate.session.events.log.LOG_QUERIES_SLOWER_THAN_MS=100

# Enable SQL logging in development
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

## HMS
app.confirmation.url=http://localhost:8080/api/auth/confirm-account

## Logging
logging.level.io.vikunalabs.hmp=TRACE

# Rate Limiting Configuration
app.rate-limit.login.attempts=5
app.rate-limit.login.window-minutes=15
app.rate-limit.resend-verification.attempts=3
app.rate-limit.resend-verification.window-minutes=5
app.rate-limit.forgot-password.attempts=3
app.rate-limit.forgot-password.window-minutes=5

# Account Locking Configuration
app.account.max-failed-attempts=5
app.account.lockout-duration-minutes=15

# Session Security Configuration (move existing ones here for organization)
app.session.timeout.default-seconds=3600
app.session.timeout.remember-me-seconds=2592000
app.session.max-concurrent=3
app.session.require-same-ip=true
app.session.detect-user-agent-change=true

# CORS Configuration
app.cors.allowed-origins=http://localhost:5173,http://localhost:3000,https://*.yourdomain.com
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH
app.cors.allowed-headers=*
app.cors.allow-credentials=true
app.cors.max-age=3600
app.cors.exposed-headers=Authorization,X-XSRF-TOKEN,Access-Control-Allow-Origin,Access-Control-Allow-Credentials

# Google OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:651734330125-h7ua2gbn6ldid61bdtsthv6dk7njda48.apps.googleusercontent.com}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET: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}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google

# OAuth2 Configuration
app.oauth2.enabled=true
app.oauth2.success-redirect-url=${FRONTEND_URL:http://localhost:5173}/dashboard
app.oauth2.failure-redirect-url=${FRONTEND_URL:http://localhost:5173}/login
app.oauth2.allowed-providers=google

# OAuth2 Rate Limiting
app.oauth2.rate-limit.max-attempts-per-ip=10
app.oauth2.rate-limit.max-attempts-per-email=5
app.oauth2.rate-limit.window-minutes=15
app.oauth2.rate-limit.email-window-minutes=30

# OAuth2 Security
app.oauth2.security.csrf-enabled=true
app.oauth2.security.state-validation-enabled=true
app.oauth2.security.audit-logging-enabled=true
app.oauth2.security.require-email-verified=true
app.oauth2.security.session-timeout-seconds=3600
app.oauth2.security.max-concurrent-sessions=3

# Environment Configuration
app.base-url=${APP_BASE_URL:http://localhost:8080}
frontend.url=${FRONTEND_URL:http://localhost:5173}
app.environment=${SPRING_PROFILES_ACTIVE:development}

# Production Security Settings (override in production)
#spring.security.oauth2.client.registration.google.redirect-uri=${APP_BASE_URL}/login/oauth2/code/google

# Session Cookie Configuration for Development
server.servlet.session.cookie.same-site=lax
server.servlet.session.cookie.secure=false
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.domain=localhost

# Enable CSRF protection but configure it properly
spring.security.csrf.cookie.same-site=none
spring.security.csrf.cookie.secure=false
spring.security.csrf.cookie.http-only=false

# Enable debug logging
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.oauth2=DEBUG